
@techreport{brunstrom_implementinginterfacestransport_2020,
  title = {Implementing Interfaces to Transport Services},
  author = {Brunstrom, Anna and Pauly, Tommy and Enghardt, Theresa and Grinnemo, Karl-Johan and Jones, Tom and Tiesel, Philipp S. and Perkins, Colin and Welzl, Michael},
  year = {2020},
  month = mar,
  pages = {51},
  institution = {{Internet Engineering Task Force / Internet Engineering Task Force}},
  url = {https://datatracker.ietf.org/doc/html/draft-ietf-taps-impl-06},
  abstract = {The Transport Services architecture [I-D.ietf-taps-arch] defines a system that allows applications to use transport networking protocols flexibly. This document serves as a guide to implementation on how to build such a system.},
  number = {draft-ietf-taps-impl-06},
  type = {Internet-Draft}
}

@misc{geal_nomerrrust_,
  title = {Nom::{{Err}} - {{Rust}}},
  shorttitle = {Nom Err},
  author = {{Geal}},
  url = {https://docs.rs/nom/5.1.1/nom/enum.Err.html},
  urldate = {2020-02-24},
  file = {/home/stuart/Zotero/storage/6KCGLBEA/enum.Err.html},
  journal = {nom::Err - Rust}
}

@misc{handley_tcpextensionsmultipath_,
  title = {{{TCP Extensions}} for {{Multipath Operation}} with {{Multiple Addresses}}},
  author = {Handley, Mark and Bonaventure, Olivier and Raiciu, Costin and Ford, Alan},
  url = {https://tools.ietf.org/html/rfc6824},
  urldate = {2020-03-24},
  file = {/home/stuart/Zotero/storage/NAUH5LZ4/rfc6824.html},
  language = {en},
  note = {Library Catalog: tools.ietf.org}
}

@misc{kalbnik_rustprogramminglanguage_,
  title = {The {{Rust Programming Language}}},
  shorttitle = {Rust},
  author = {Kalbnik, Steve and Nichols, Carol and Rust Community},
  url = {https://doc.rust-lang.org/book/},
  urldate = {2019-11-04},
  abstract = {The Rust programming language helps you write faster, more reliable software. High-level ergonomics and low-level control are often at odds in programming language design; Rust challenges that conflict. Through balancing powerful technical capacity and a great developer experience, Rust gives you the option to control low-level details (such as memory usage) without all the hassle traditionally associated with such control.},
  file = {/home/stuart/Zotero/storage/G9RJNDFA/book.html},
  journal = {The Rust Programming Language},
  language = {en}
}

@article{khademi_neatplatformprotocolindependent_2017,
  title = {{{NEAT}}: {{A Platform}}- and {{Protocol}}-{{Independent Internet Transport API}}},
  shorttitle = {{{NEAT}}},
  author = {Khademi, Naeem and Ros, David and Welzl, Michael and Bozakov, Zdravko and Brunstrom, Anna and Fairhurst, Gorry and Grinnemo, Karl-Johan and Hayes, David and Hurtig, Per and Jones, Tom and Mangiante, Simone and Tuxen, Michael and Weinrank, Felix},
  year = {2017},
  volume = {55},
  pages = {46--54},
  issn = {0163-6804},
  doi = {10.1109/MCOM.2017.1601052},
  url = {http://ieeexplore.ieee.org/document/7945852/},
  urldate = {2019-09-25},
  file = {/home/stuart/Zotero/storage/JBG879FL/Khademi et al. - 2017 - NEAT A Platform- and Protocol-Independent Interne.pdf},
  journal = {IEEE Communications Magazine},
  language = {en},
  number = {6}
}

@misc{kuhlewind_postsocketsabstract_,
  title = {Post {{Sockets}}, {{An Abstract Programming Interface}} for the {{Transport Layer}}},
  author = {K{\"u}hlewind, Mirja and Perkins, Colin and Trammell, Brian and Wood, Christopher and Pauly, Tommy},
  url = {https://tools.ietf.org/html/draft-trammell-taps-post-sockets-03},
  urldate = {2020-03-24},
  file = {/home/stuart/Zotero/storage/FK29N68G/draft-trammell-taps-post-sockets-03.html},
  language = {en},
  note = {Library Catalog: tools.ietf.org}
}

@techreport{pauly_architecturetransportservices_2020,
  title = {An Architecture for Transport Services},
  author = {Pauly, Tommy and Trammell, Brian and Brunstrom, Anna and Fairhurst, Gorry and Perkins, Colin and Tiesel, Philipp S. and Wood, Christopher A.},
  year = {2020},
  month = mar,
  pages = {28},
  institution = {{Internet Engineering Task Force / Internet Engineering Task Force}},
  url = {https://datatracker.ietf.org/doc/html/draft-ietf-taps-arch-07},
  abstract = {This document describes an architecture for exposing transport protocol features to applications for network communication, the Transport Services architecture. The Transport Services Application Programming Interface (API) is based on an asynchronous, event-driven interaction pattern. It uses messages for representing data transfer to applications, and it assumes an implementation that can use multiple IP addresses, multiple protocols, and multiple paths, and provide multiple application streams. This document further defines common terminology and concepts to be used in definitions of Transport Services APIs and implementations.},
  number = {draft-ietf-taps-arch-07},
  type = {Internet-Draft}
}

@misc{pauly_happyeyeballsversion_,
  title = {Happy {{Eyeballs Version}} 2: {{Better Connectivity Using Concurrency}}},
  shorttitle = {Happy {{Eyeballs Version}} 2},
  author = {Pauly, Tommy and Schinazi, David},
  url = {https://tools.ietf.org/html/rfc8305},
  urldate = {2020-03-10},
  file = {/home/stuart/Zotero/storage/ZR96QF3L/rfc8305.html},
  language = {en},
  note = {Library Catalog: tools.ietf.org}
}

@misc{rustteam_rustprogramminglanguage_,
  title = {Rust {{Programming Language}}},
  shorttitle = {Rust Lang},
  author = {Rust Team},
  url = {https://www.rust-lang.org/},
  urldate = {2019-11-06},
  abstract = {A language empowering everyone to build reliable and efficient software.},
  file = {/home/stuart/Zotero/storage/E4WUI8MJ/www.rust-lang.org.html},
  language = {en-US}
}

@misc{tokiocommunity_tokioasynchronousruntime_,
  title = {Tokio - {{The}} Asynchronous Run-Time for the {{Rust}} Programming Language.},
  shorttitle = {Tokio},
  author = {{Tokio Community}},
  url = {https://tokio.rs/},
  urldate = {2020-03-01},
  file = {/home/stuart/Zotero/storage/H345S62F/tokio.rs.html},
  journal = {Tokio - The asynchronous run-time for the Rust programming language.}
}

@techreport{trammell_abstractapplicationlayer_2020,
  title = {An Abstract Application Layer Interface to Transport Services},
  author = {Trammell, Brian and Welzl, Michael and Enghardt, Theresa and Fairhurst, Gorry and K{\"u}hlewind, Mirja and Perkins, Colin and Tiesel, Philipp S. and Wood, Christopher A. and Pauly, Tommy},
  year = {2020},
  month = mar,
  pages = {69},
  institution = {{Internet Engineering Task Force / Internet Engineering Task Force}},
  url = {https://datatracker.ietf.org/doc/html/draft-ietf-taps-interface-06},
  abstract = {This document describes an abstract programming interface to the transport layer, following the Transport Services Architecture. It supports the asynchronous, atomic transmission of messages over transport protocols and network paths dynamically selected at runtime. It is intended to replace the traditional BSD sockets API as the lowest common denominator interface to the transport layer, in an environment where endpoints have multiple interfaces and potential transport protocols to select from.},
  number = {draft-ietf-taps-interface-06},
  type = {Internet-Draft}
}

@misc{withoutboats_asyncawaitnotation_,
  title = {Async/Await Notation for Ergonomic Asynchronous {{IO}} by Withoutboats {$\cdot$} {{Pull Request}} \#2394 {$\cdot$} Rust-Lang/Rfcs},
  shorttitle = {Async/Await},
  author = {{withoutboats}},
  url = {https://github.com/rust-lang/rfcs/pull/2394},
  urldate = {2020-03-01},
  abstract = {Rendered
Companion libs RFC
Edit: Updated rendered link to merged location},
  file = {/home/stuart/Zotero/storage/MYN6AIZW/2394.html},
  journal = {GitHub},
  language = {en},
  note = {Library Catalog: github.com}
}


